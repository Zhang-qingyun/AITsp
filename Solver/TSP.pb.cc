// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TSP.proto

#include "TSP.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_TSP_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_TSP_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TSP_Edge;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_TSP_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TSP_Node;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_TSP_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TSP_UndirectGraph;
}  // namespace protobuf_TSP_2eproto
namespace pb {
class TSP_InputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TSP_Input>
      _instance;
} _TSP_Input_default_instance_;
class TSP_OutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TSP_Output>
      _instance;
} _TSP_Output_default_instance_;
class TSP_UndirectGraphDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TSP_UndirectGraph>
      _instance;
} _TSP_UndirectGraph_default_instance_;
class TSP_EdgeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TSP_Edge>
      _instance;
} _TSP_Edge_default_instance_;
class TSP_NodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TSP_Node>
      _instance;
} _TSP_Node_default_instance_;
class TSPDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TSP>
      _instance;
} _TSP_default_instance_;
}  // namespace pb
namespace protobuf_TSP_2eproto {
static void InitDefaultsTSP_Input() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_TSP_Input_default_instance_;
    new (ptr) ::pb::TSP_Input();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::TSP_Input::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TSP_Input =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTSP_Input}, {
      &protobuf_TSP_2eproto::scc_info_TSP_UndirectGraph.base,}};

static void InitDefaultsTSP_Output() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_TSP_Output_default_instance_;
    new (ptr) ::pb::TSP_Output();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::TSP_Output::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TSP_Output =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTSP_Output}, {}};

static void InitDefaultsTSP_UndirectGraph() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_TSP_UndirectGraph_default_instance_;
    new (ptr) ::pb::TSP_UndirectGraph();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::TSP_UndirectGraph::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TSP_UndirectGraph =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTSP_UndirectGraph}, {
      &protobuf_TSP_2eproto::scc_info_TSP_Edge.base,
      &protobuf_TSP_2eproto::scc_info_TSP_Node.base,}};

static void InitDefaultsTSP_Edge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_TSP_Edge_default_instance_;
    new (ptr) ::pb::TSP_Edge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::TSP_Edge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TSP_Edge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTSP_Edge}, {}};

static void InitDefaultsTSP_Node() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_TSP_Node_default_instance_;
    new (ptr) ::pb::TSP_Node();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::TSP_Node::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TSP_Node =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTSP_Node}, {}};

static void InitDefaultsTSP() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_TSP_default_instance_;
    new (ptr) ::pb::TSP();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::TSP::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TSP =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTSP}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TSP_Input.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TSP_Output.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TSP_UndirectGraph.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TSP_Edge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TSP_Node.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TSP.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TSP_Input, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TSP_Input, graph_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TSP_Input, centernum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TSP_Output, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TSP_Output, paths_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TSP_UndirectGraph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TSP_UndirectGraph, edges_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TSP_UndirectGraph, nodenum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TSP_UndirectGraph, nodes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TSP_Edge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TSP_Edge, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TSP_Edge, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TSP_Edge, length_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TSP_Node, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TSP_Node, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TSP_Node, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::TSP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::TSP_Input)},
  { 7, -1, sizeof(::pb::TSP_Output)},
  { 13, -1, sizeof(::pb::TSP_UndirectGraph)},
  { 21, -1, sizeof(::pb::TSP_Edge)},
  { 29, -1, sizeof(::pb::TSP_Node)},
  { 36, -1, sizeof(::pb::TSP)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_TSP_Input_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_TSP_Output_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_TSP_UndirectGraph_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_TSP_Edge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_TSP_Node_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_TSP_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "TSP.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tTSP.proto\022\002pb\"\222\002\n\003TSP\032@\n\005Input\022$\n\005grap"
      "h\030\001 \001(\0132\025.pb.TSP.UndirectGraph\022\021\n\tcenter"
      "Num\030\002 \001(\005\032\027\n\006Output\022\r\n\005paths\030\001 \003(\005\032Z\n\rUn"
      "directGraph\022\033\n\005edges\030\001 \003(\0132\014.pb.TSP.Edge"
      "\022\017\n\007nodeNum\030\002 \001(\005\022\033\n\005nodes\030\003 \003(\0132\014.pb.TS"
      "P.Node\0326\n\004Edge\022\016\n\006source\030\001 \001(\005\022\016\n\006target"
      "\030\002 \001(\005\022\016\n\006length\030\003 \001(\005\032\034\n\004Node\022\t\n\001x\030\001 \001("
      "\001\022\t\n\001y\030\002 \001(\001B\025\n\002pbB\017GateAssignmentsb\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 323);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "TSP.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_TSP_2eproto
namespace pb {

// ===================================================================

void TSP_Input::InitAsDefaultInstance() {
  ::pb::_TSP_Input_default_instance_._instance.get_mutable()->graph_ = const_cast< ::pb::TSP_UndirectGraph*>(
      ::pb::TSP_UndirectGraph::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TSP_Input::kGraphFieldNumber;
const int TSP_Input::kCenterNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TSP_Input::TSP_Input()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_TSP_2eproto::scc_info_TSP_Input.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSP.Input)
}
TSP_Input::TSP_Input(const TSP_Input& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_graph()) {
    graph_ = new ::pb::TSP_UndirectGraph(*from.graph_);
  } else {
    graph_ = NULL;
  }
  centernum_ = from.centernum_;
  // @@protoc_insertion_point(copy_constructor:pb.TSP.Input)
}

void TSP_Input::SharedCtor() {
  ::memset(&graph_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&centernum_) -
      reinterpret_cast<char*>(&graph_)) + sizeof(centernum_));
}

TSP_Input::~TSP_Input() {
  // @@protoc_insertion_point(destructor:pb.TSP.Input)
  SharedDtor();
}

void TSP_Input::SharedDtor() {
  if (this != internal_default_instance()) delete graph_;
}

void TSP_Input::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TSP_Input::descriptor() {
  ::protobuf_TSP_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TSP_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TSP_Input& TSP_Input::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_TSP_2eproto::scc_info_TSP_Input.base);
  return *internal_default_instance();
}


void TSP_Input::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.TSP.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && graph_ != NULL) {
    delete graph_;
  }
  graph_ = NULL;
  centernum_ = 0;
  _internal_metadata_.Clear();
}

bool TSP_Input::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSP.Input)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pb.TSP.UndirectGraph graph = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_graph()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 centerNum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &centernum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSP.Input)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSP.Input)
  return false;
#undef DO_
}

void TSP_Input::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSP.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.TSP.UndirectGraph graph = 1;
  if (this->has_graph()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_graph(), output);
  }

  // int32 centerNum = 2;
  if (this->centernum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->centernum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSP.Input)
}

::google::protobuf::uint8* TSP_Input::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSP.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.TSP.UndirectGraph graph = 1;
  if (this->has_graph()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_graph(), deterministic, target);
  }

  // int32 centerNum = 2;
  if (this->centernum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->centernum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSP.Input)
  return target;
}

size_t TSP_Input::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.TSP.Input)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .pb.TSP.UndirectGraph graph = 1;
  if (this->has_graph()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *graph_);
  }

  // int32 centerNum = 2;
  if (this->centernum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->centernum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TSP_Input::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.TSP.Input)
  GOOGLE_DCHECK_NE(&from, this);
  const TSP_Input* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TSP_Input>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.TSP.Input)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.TSP.Input)
    MergeFrom(*source);
  }
}

void TSP_Input::MergeFrom(const TSP_Input& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.TSP.Input)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_graph()) {
    mutable_graph()->::pb::TSP_UndirectGraph::MergeFrom(from.graph());
  }
  if (from.centernum() != 0) {
    set_centernum(from.centernum());
  }
}

void TSP_Input::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.TSP.Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSP_Input::CopyFrom(const TSP_Input& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.TSP.Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSP_Input::IsInitialized() const {
  return true;
}

void TSP_Input::Swap(TSP_Input* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TSP_Input::InternalSwap(TSP_Input* other) {
  using std::swap;
  swap(graph_, other->graph_);
  swap(centernum_, other->centernum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TSP_Input::GetMetadata() const {
  protobuf_TSP_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TSP_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TSP_Output::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TSP_Output::kPathsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TSP_Output::TSP_Output()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_TSP_2eproto::scc_info_TSP_Output.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSP.Output)
}
TSP_Output::TSP_Output(const TSP_Output& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      paths_(from.paths_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.TSP.Output)
}

void TSP_Output::SharedCtor() {
}

TSP_Output::~TSP_Output() {
  // @@protoc_insertion_point(destructor:pb.TSP.Output)
  SharedDtor();
}

void TSP_Output::SharedDtor() {
}

void TSP_Output::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TSP_Output::descriptor() {
  ::protobuf_TSP_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TSP_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TSP_Output& TSP_Output::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_TSP_2eproto::scc_info_TSP_Output.base);
  return *internal_default_instance();
}


void TSP_Output::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.TSP.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  paths_.Clear();
  _internal_metadata_.Clear();
}

bool TSP_Output::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSP.Output)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 paths = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_paths())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_paths())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSP.Output)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSP.Output)
  return false;
#undef DO_
}

void TSP_Output::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSP.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 paths = 1;
  if (this->paths_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _paths_cached_byte_size_));
  }
  for (int i = 0, n = this->paths_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->paths(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSP.Output)
}

::google::protobuf::uint8* TSP_Output::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSP.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 paths = 1;
  if (this->paths_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _paths_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->paths_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSP.Output)
  return target;
}

size_t TSP_Output::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.TSP.Output)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 paths = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->paths_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _paths_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TSP_Output::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.TSP.Output)
  GOOGLE_DCHECK_NE(&from, this);
  const TSP_Output* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TSP_Output>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.TSP.Output)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.TSP.Output)
    MergeFrom(*source);
  }
}

void TSP_Output::MergeFrom(const TSP_Output& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.TSP.Output)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  paths_.MergeFrom(from.paths_);
}

void TSP_Output::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.TSP.Output)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSP_Output::CopyFrom(const TSP_Output& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.TSP.Output)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSP_Output::IsInitialized() const {
  return true;
}

void TSP_Output::Swap(TSP_Output* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TSP_Output::InternalSwap(TSP_Output* other) {
  using std::swap;
  paths_.InternalSwap(&other->paths_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TSP_Output::GetMetadata() const {
  protobuf_TSP_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TSP_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TSP_UndirectGraph::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TSP_UndirectGraph::kEdgesFieldNumber;
const int TSP_UndirectGraph::kNodeNumFieldNumber;
const int TSP_UndirectGraph::kNodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TSP_UndirectGraph::TSP_UndirectGraph()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_TSP_2eproto::scc_info_TSP_UndirectGraph.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSP.UndirectGraph)
}
TSP_UndirectGraph::TSP_UndirectGraph(const TSP_UndirectGraph& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      edges_(from.edges_),
      nodes_(from.nodes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nodenum_ = from.nodenum_;
  // @@protoc_insertion_point(copy_constructor:pb.TSP.UndirectGraph)
}

void TSP_UndirectGraph::SharedCtor() {
  nodenum_ = 0;
}

TSP_UndirectGraph::~TSP_UndirectGraph() {
  // @@protoc_insertion_point(destructor:pb.TSP.UndirectGraph)
  SharedDtor();
}

void TSP_UndirectGraph::SharedDtor() {
}

void TSP_UndirectGraph::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TSP_UndirectGraph::descriptor() {
  ::protobuf_TSP_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TSP_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TSP_UndirectGraph& TSP_UndirectGraph::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_TSP_2eproto::scc_info_TSP_UndirectGraph.base);
  return *internal_default_instance();
}


void TSP_UndirectGraph::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.TSP.UndirectGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edges_.Clear();
  nodes_.Clear();
  nodenum_ = 0;
  _internal_metadata_.Clear();
}

bool TSP_UndirectGraph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSP.UndirectGraph)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TSP.Edge edges = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_edges()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nodeNum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.TSP.Node nodes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSP.UndirectGraph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSP.UndirectGraph)
  return false;
#undef DO_
}

void TSP_UndirectGraph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSP.UndirectGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.TSP.Edge edges = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->edges_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->edges(static_cast<int>(i)),
      output);
  }

  // int32 nodeNum = 2;
  if (this->nodenum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nodenum(), output);
  }

  // repeated .pb.TSP.Node nodes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->nodes(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSP.UndirectGraph)
}

::google::protobuf::uint8* TSP_UndirectGraph::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSP.UndirectGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.TSP.Edge edges = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->edges_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->edges(static_cast<int>(i)), deterministic, target);
  }

  // int32 nodeNum = 2;
  if (this->nodenum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nodenum(), target);
  }

  // repeated .pb.TSP.Node nodes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->nodes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSP.UndirectGraph)
  return target;
}

size_t TSP_UndirectGraph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.TSP.UndirectGraph)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.TSP.Edge edges = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->edges_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->edges(static_cast<int>(i)));
    }
  }

  // repeated .pb.TSP.Node nodes = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->nodes(static_cast<int>(i)));
    }
  }

  // int32 nodeNum = 2;
  if (this->nodenum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nodenum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TSP_UndirectGraph::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.TSP.UndirectGraph)
  GOOGLE_DCHECK_NE(&from, this);
  const TSP_UndirectGraph* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TSP_UndirectGraph>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.TSP.UndirectGraph)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.TSP.UndirectGraph)
    MergeFrom(*source);
  }
}

void TSP_UndirectGraph::MergeFrom(const TSP_UndirectGraph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.TSP.UndirectGraph)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  edges_.MergeFrom(from.edges_);
  nodes_.MergeFrom(from.nodes_);
  if (from.nodenum() != 0) {
    set_nodenum(from.nodenum());
  }
}

void TSP_UndirectGraph::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.TSP.UndirectGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSP_UndirectGraph::CopyFrom(const TSP_UndirectGraph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.TSP.UndirectGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSP_UndirectGraph::IsInitialized() const {
  return true;
}

void TSP_UndirectGraph::Swap(TSP_UndirectGraph* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TSP_UndirectGraph::InternalSwap(TSP_UndirectGraph* other) {
  using std::swap;
  CastToBase(&edges_)->InternalSwap(CastToBase(&other->edges_));
  CastToBase(&nodes_)->InternalSwap(CastToBase(&other->nodes_));
  swap(nodenum_, other->nodenum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TSP_UndirectGraph::GetMetadata() const {
  protobuf_TSP_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TSP_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TSP_Edge::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TSP_Edge::kSourceFieldNumber;
const int TSP_Edge::kTargetFieldNumber;
const int TSP_Edge::kLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TSP_Edge::TSP_Edge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_TSP_2eproto::scc_info_TSP_Edge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSP.Edge)
}
TSP_Edge::TSP_Edge(const TSP_Edge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&source_, &from.source_,
    static_cast<size_t>(reinterpret_cast<char*>(&length_) -
    reinterpret_cast<char*>(&source_)) + sizeof(length_));
  // @@protoc_insertion_point(copy_constructor:pb.TSP.Edge)
}

void TSP_Edge::SharedCtor() {
  ::memset(&source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&length_) -
      reinterpret_cast<char*>(&source_)) + sizeof(length_));
}

TSP_Edge::~TSP_Edge() {
  // @@protoc_insertion_point(destructor:pb.TSP.Edge)
  SharedDtor();
}

void TSP_Edge::SharedDtor() {
}

void TSP_Edge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TSP_Edge::descriptor() {
  ::protobuf_TSP_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TSP_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TSP_Edge& TSP_Edge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_TSP_2eproto::scc_info_TSP_Edge.base);
  return *internal_default_instance();
}


void TSP_Edge::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.TSP.Edge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&length_) -
      reinterpret_cast<char*>(&source_)) + sizeof(length_));
  _internal_metadata_.Clear();
}

bool TSP_Edge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSP.Edge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 target = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 length = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSP.Edge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSP.Edge)
  return false;
#undef DO_
}

void TSP_Edge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSP.Edge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 source = 1;
  if (this->source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->source(), output);
  }

  // int32 target = 2;
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->target(), output);
  }

  // int32 length = 3;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->length(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSP.Edge)
}

::google::protobuf::uint8* TSP_Edge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSP.Edge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 source = 1;
  if (this->source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->source(), target);
  }

  // int32 target = 2;
  if (this->target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->target(), target);
  }

  // int32 length = 3;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->length(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSP.Edge)
  return target;
}

size_t TSP_Edge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.TSP.Edge)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 source = 1;
  if (this->source() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->source());
  }

  // int32 target = 2;
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->target());
  }

  // int32 length = 3;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->length());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TSP_Edge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.TSP.Edge)
  GOOGLE_DCHECK_NE(&from, this);
  const TSP_Edge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TSP_Edge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.TSP.Edge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.TSP.Edge)
    MergeFrom(*source);
  }
}

void TSP_Edge::MergeFrom(const TSP_Edge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.TSP.Edge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.source() != 0) {
    set_source(from.source());
  }
  if (from.target() != 0) {
    set_target(from.target());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
}

void TSP_Edge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.TSP.Edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSP_Edge::CopyFrom(const TSP_Edge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.TSP.Edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSP_Edge::IsInitialized() const {
  return true;
}

void TSP_Edge::Swap(TSP_Edge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TSP_Edge::InternalSwap(TSP_Edge* other) {
  using std::swap;
  swap(source_, other->source_);
  swap(target_, other->target_);
  swap(length_, other->length_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TSP_Edge::GetMetadata() const {
  protobuf_TSP_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TSP_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TSP_Node::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TSP_Node::kXFieldNumber;
const int TSP_Node::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TSP_Node::TSP_Node()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_TSP_2eproto::scc_info_TSP_Node.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSP.Node)
}
TSP_Node::TSP_Node(const TSP_Node& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:pb.TSP.Node)
}

void TSP_Node::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

TSP_Node::~TSP_Node() {
  // @@protoc_insertion_point(destructor:pb.TSP.Node)
  SharedDtor();
}

void TSP_Node::SharedDtor() {
}

void TSP_Node::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TSP_Node::descriptor() {
  ::protobuf_TSP_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TSP_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TSP_Node& TSP_Node::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_TSP_2eproto::scc_info_TSP_Node.base);
  return *internal_default_instance();
}


void TSP_Node::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.TSP.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool TSP_Node::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSP.Node)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSP.Node)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSP.Node)
  return false;
#undef DO_
}

void TSP_Node::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSP.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSP.Node)
}

::google::protobuf::uint8* TSP_Node::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSP.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSP.Node)
  return target;
}

size_t TSP_Node::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.TSP.Node)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TSP_Node::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.TSP.Node)
  GOOGLE_DCHECK_NE(&from, this);
  const TSP_Node* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TSP_Node>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.TSP.Node)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.TSP.Node)
    MergeFrom(*source);
  }
}

void TSP_Node::MergeFrom(const TSP_Node& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.TSP.Node)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void TSP_Node::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.TSP.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSP_Node::CopyFrom(const TSP_Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.TSP.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSP_Node::IsInitialized() const {
  return true;
}

void TSP_Node::Swap(TSP_Node* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TSP_Node::InternalSwap(TSP_Node* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TSP_Node::GetMetadata() const {
  protobuf_TSP_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TSP_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TSP::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TSP::TSP()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_TSP_2eproto::scc_info_TSP.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TSP)
}
TSP::TSP(const TSP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.TSP)
}

void TSP::SharedCtor() {
}

TSP::~TSP() {
  // @@protoc_insertion_point(destructor:pb.TSP)
  SharedDtor();
}

void TSP::SharedDtor() {
}

void TSP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TSP::descriptor() {
  ::protobuf_TSP_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TSP_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TSP& TSP::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_TSP_2eproto::scc_info_TSP.base);
  return *internal_default_instance();
}


void TSP::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.TSP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool TSP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TSP)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TSP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TSP)
  return false;
#undef DO_
}

void TSP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TSP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TSP)
}

::google::protobuf::uint8* TSP::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.TSP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TSP)
  return target;
}

size_t TSP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.TSP)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TSP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.TSP)
  GOOGLE_DCHECK_NE(&from, this);
  const TSP* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TSP>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.TSP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.TSP)
    MergeFrom(*source);
  }
}

void TSP::MergeFrom(const TSP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.TSP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TSP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.TSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TSP::CopyFrom(const TSP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.TSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSP::IsInitialized() const {
  return true;
}

void TSP::Swap(TSP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TSP::InternalSwap(TSP* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TSP::GetMetadata() const {
  protobuf_TSP_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TSP_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::TSP_Input* Arena::CreateMaybeMessage< ::pb::TSP_Input >(Arena* arena) {
  return Arena::CreateInternal< ::pb::TSP_Input >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::TSP_Output* Arena::CreateMaybeMessage< ::pb::TSP_Output >(Arena* arena) {
  return Arena::CreateInternal< ::pb::TSP_Output >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::TSP_UndirectGraph* Arena::CreateMaybeMessage< ::pb::TSP_UndirectGraph >(Arena* arena) {
  return Arena::CreateInternal< ::pb::TSP_UndirectGraph >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::TSP_Edge* Arena::CreateMaybeMessage< ::pb::TSP_Edge >(Arena* arena) {
  return Arena::CreateInternal< ::pb::TSP_Edge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::TSP_Node* Arena::CreateMaybeMessage< ::pb::TSP_Node >(Arena* arena) {
  return Arena::CreateInternal< ::pb::TSP_Node >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::TSP* Arena::CreateMaybeMessage< ::pb::TSP >(Arena* arena) {
  return Arena::CreateInternal< ::pb::TSP >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
